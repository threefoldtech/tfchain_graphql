apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "processor.fullname" . }}
  labels:
    {{- include "processor.labels" . | nindent 4 }}
    io.kompose.service: processor
  name: tfchainprocessor
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "processor.selectorLabels" . | nindent 6 }}
  strategy: {}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "processor.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - args:
          - sh
          - -c
          - npm run process
          image: "{{ .Values.image.processor.repository }}:{{ .Values.image.processor.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.processor.pullPolicy }}
          name: processor
          ports:
            - containerPort: 44233  
          resources: {}
          env:
            - name: BATCH_SIZE
              valueFrom:
                configMapKeyRef:
                  key: BATCH_SIZE
                  name: env
            - name: BLOCK_WINDOW
              valueFrom:
                configMapKeyRef:
                  key: BLOCK_WINDOW
                  name: env
            - name: DB_HOST
              value: {{ .Values.db_host }}
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: DB_NAME
                  name: env
            - name: DB_PASS
              valueFrom:
                configMapKeyRef:
                  key: DB_PASS
                  name: env
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  key: DB_PORT
                  name: env
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  key: DB_USER
                  name: env
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  key: DEBUG
                  name: env
            - name: GRAPHQL_SERVER_HOST
              valueFrom:
                configMapKeyRef:
                  key: GRAPHQL_SERVER_HOST
                  name: env
            - name: GRAPHQL_SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  key: GRAPHQL_SERVER_PORT
                  name: env
            - name: INDEXER_ENDPOINT_URL
              valueFrom:
                configMapKeyRef:
                  key: INDEXER_ENDPOINT_URL
                  name: env
            - name: WS_URL
              valueFrom:
                configMapKeyRef:
                  key: WS_URL
                  name: env
            - name: POLL_INTERVAL_MS
              value: "300"
            - name: PROJECT_NAME
              valueFrom:
                configMapKeyRef:
                  key: PROJECT_NAME
                  name: env
        - args:
          - sh
          - -c
          - npm run api
          image: "{{ .Values.image.querynode.repository }}:{{ .Values.image.querynode.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.querynode.pullPolicy }}
          name: query-node
          ports:
            - containerPort: 4000
          resources: {}
          env:
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: DB_NAME
                  name: env
            - name: DB_PASS
              valueFrom:
                configMapKeyRef:
                  key: DB_PASS
                  name: env
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  key: DB_USER
                  name: env
            - name: DB_HOST
              value: {{ .Values.db_host }}
      restartPolicy: Always
status: {}
